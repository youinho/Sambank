<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
        
        
        <!-- <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> <beans:property name="dataSource" ref="dataSource"/> </beans:bean> -->
		<beans:bean id="admin_loginFailureHandler" class="security.Admin_LoginFailureHandler">
			<beans:property name="defaultFailureUrl" value="/admin/login?error=failed"/>
		</beans:bean>
		<beans:bean id="admin_loginSuccessHandler" class="security.Admin_LoginSuccessHandler"/>
		<beans:bean id="customer_loginFailureHandler" class="security.Customer_LoginFailureHandler">
			<beans:property name="defaultFailureUrl" value="/member/login?error=failed"/>
		</beans:bean>
		<beans:bean id="customer_loginSuccessHandler" class="security.Customer_LoginSuccessHandler"/>
        <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
        	
        
    <!-- 시큐리티 예외사항 -->
    <sec:http pattern="/admin/popup/jusopopup" security="none" />
    <sec:http pattern="/member/useraccount/jusopopup" security="none" />
    
    <!-- 검사 URL -->
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/">
    	<intercept-url pattern="/" access="isAnonymous()||hasRole('ROLE_USER')"   />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/A">
    	<intercept-url pattern="/A" access="isAnonymous()||hasRole('ROLE_USER')"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/N">
    	<intercept-url pattern="/N" access="isAnonymous()||hasRole('ROLE_USER')"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/E">
    	<intercept-url pattern="/E" access="isAnonymous()||hasRole('ROLE_USER')"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/F">
    	<intercept-url pattern="/F" access="isAnonymous()||hasRole('ROLE_USER')"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/register/**">
    	<intercept-url pattern="/register/**" access="isAnonymous()"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/findpass">
    	<intercept-url pattern="/findpass" access="isAnonymous()"    />
    </http>
    
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/verify_email">
    	<intercept-url pattern="/verify_email" access="isAnonymous()"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/check_recapcha">
    	<intercept-url pattern="/check_recapcha" access="isAnonymous()"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/resend_verify">
    	<intercept-url pattern="/resend_verify" access="isAnonymous()"    />
    </http>
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/send_tmpPass">
    	<intercept-url pattern="/send_tmpPass" access="isAnonymous()"    />
    </http>
    <!-- requires-channel="https" -->
    <!-- admin페이지 인터셉터, 로그인관리 -->
    <http auto-config='true'  use-expressions="true" authentication-manager-ref="admin_auth" pattern="/admin/**">
        <intercept-url pattern="/admin/login" access="isAnonymous()||hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"/>
        <intercept-url pattern="/admin/inquiry" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"  />  
        <intercept-url pattern="/admin/manage" access="hasAnyRole('ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/notice" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/notice/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"  />
        <intercept-url pattern="/admin/card/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')" />
        <intercept-url pattern="/admin/customer/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/customer_notice" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/customer_notice/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/account/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_1,ROLE_3,ROLE_5,ROLE_7,ROLE_10')"   />
        <form-login login-page="/admin/login" 
        			login-processing-url="/admin/login_process"
			        default-target-url="/admin/notice" 
			        authentication-details-source-ref=""
			        username-parameter="id" 
			        password-parameter="password"
			        authentication-failure-handler-ref="admin_loginFailureHandler"
			        authentication-success-handler-ref="admin_loginSuccessHandler" /> 
        <logout invalidate-session="false"
        		delete-cookies="JSESSIONID"
        		logout-url="/admin/logout" 
        		logout-success-url="/admin/login?logout"/>
       <access-denied-handler error-page="/errorpage/403" />
		<session-management invalid-session-url="/admin/login?invalid">
        	<concurrency-control max-sessions="1" expired-url="/errorpage/expired"/>
    	</session-management>
        <csrf disabled="false"/>
    </http>
    
    
     <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="ds"/>
    </beans:bean>
 	<!--  -->
	<http auto-config='true'  use-expressions="true" authentication-manager-ref="customer_auth" pattern="/member/**">
        <intercept-url pattern="/member/login" access="isAnonymous()||hasRole('ROLE_USER')"  />
        <intercept-url pattern="/member/**" access="hasRole('ROLE_USER')"  />
		
        <form-login login-page="/member/login" 
        			login-processing-url="/member/login_process"
			        default-target-url="/" 
			        
			        username-parameter="id" 
			        password-parameter="password"
			        authentication-failure-handler-ref="customer_loginFailureHandler"
			        authentication-success-handler-ref="customer_loginSuccessHandler" /> 
        <logout invalidate-session="true"
        		logout-url="/member/logout" 
        		logout-success-url="/?logout" />
       <access-denied-handler error-page="/errorpage/403" />
		<session-management invalid-session-url="/?logout">
        	<concurrency-control max-sessions="1" expired-url="/errorpage/expired"/>
    	</session-management>
        <csrf disabled="false"/>
    </http>
    <!-- pattern : 적용할 URL -->
    <!-- hasRole('ROLE_USER') : customertbl 에 있는 authority 컬럼의 값이 ROLE_USER 이어야 허용 -->
    <!-- login-page : 로그인폼이 있는 주소 -->
    <!-- login-processing-url : 로그인 폼의 Action을 이것으로 하고 submit 하면 로그인 프로세스 작동(post) -->
    <!-- default-target-url : 로그인 성공하면 가게되는 주소인듯 -->
    <!-- authentication-failure-url : 권한을 못얻었을 때 가게되는 주소인듯 -->
    <!--  -->
    <!-- logout-url : 이 주소로 요청하면 로그아웃 되는것 같음(반드시 post로 보내야함) -->
    
    
    <!--  provider (admin 페이지) -->
    <authentication-manager id="admin_auth">
        <authentication-provider ref="adminAuthProvider"/>
    </authentication-manager>
    <beans:bean id="adminAuthProvider" class="security.Admin_AuthenticationProvider"/>
    <beans:bean id="userService" class="security.Customer_UserDetailService" />
    <beans:bean id="adminService" class="security.Admin_UserDetailService" />
    <beans:bean id="adminUserDetails" class="security.Admin_UserDetails" />
    <beans:bean id="customerAuthProvider" class="security.Customer_AuthenticationProvider"/>
    <!-- provider 유저페이지 추가할것** -->
    <authentication-manager id="customer_auth" >
    	<authentication-provider ref="customerAuthProvider"/>
    </authentication-manager>
</beans:beans>